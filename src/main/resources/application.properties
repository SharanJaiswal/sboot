spring.application.name=exampleApps
server.port=8080
server.servlet.context-path=/cac

# for h2 embedded database
spring.h2.console.enabled=true
spring.datasource.generate-unique-name=false
# connection URL will be mentioned in boot logs. But if we need any external data source to connect, then:
#spring.datasource.url=jdbc:h2:tcp://localhost/F:/h2dbLocation/h2dbServer
#spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.name=runnerz-h2-db
spring.datasource.username=sharan-h2-db-embedded
spring.datasource.password=12345
# below value can be none, create-drop, create, validate, update
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

#to show sql
#spring.jpa.properties.hibernate.show_sql=true
# OR IN OTHER WAY:
spring.jpa.show-sql=true
#formatting
spring.jpa.properties.hibernate.format_sql=true
#printing parameter values in order
logging.level.org.hibernate.type.descriptor.sql=trace

# for case where only any other single DB is configured, we need name, url, username, password
#spring.datasource.name=prostgres-db-name
#spring.datasource.url=jdbc:postgresql://localhost:5432/prostgres-db-name
#spring.datasource.username=some-username-of-postgres
#spring.datasource.password=some-password-of-postgres

# In cases when non-embedded DBs are present, and we want them to pick the .sql files from resources, and run them: By default, it is set as 'embedded', but we can set as 'always' or 'never'
spring.sql.init.mode=always


